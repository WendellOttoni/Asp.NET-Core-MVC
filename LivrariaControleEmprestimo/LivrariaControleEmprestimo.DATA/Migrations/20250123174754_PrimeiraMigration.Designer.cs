// <auto-generated />
using System;
using LivrariaControleEmprestimo.DATA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LivrariaControleEmprestimo.DATA.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20250123174754_PrimeiraMigration")]
    partial class PrimeiraMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("autor");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.LivroClienteEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataDevolucao");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime")
                        .HasColumnName("dataEmprestimo");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<int>("IdLivro")
                        .HasColumnType("int")
                        .HasColumnName("idLivro");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdLivro");

                    b.ToTable("Livro_Cliente_Emprestimo");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.LivroClienteEmprestimo", b =>
                {
                    b.HasOne("LivrariaControleEmprestimo.DATA.Models.Cliente", "IdClienteNavigation")
                        .WithMany("LivroClienteEmprestimos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Livro_Cliente_Emprestimo_Cliente");

                    b.HasOne("LivrariaControleEmprestimo.DATA.Models.Livro", "IdLivroNavigation")
                        .WithMany("LivroClienteEmprestimos")
                        .HasForeignKey("IdLivro")
                        .IsRequired()
                        .HasConstraintName("FK_Livro_Cliente_Emprestimo_Livro");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdLivroNavigation");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Cliente", b =>
                {
                    b.Navigation("LivroClienteEmprestimos");
                });

            modelBuilder.Entity("LivrariaControleEmprestimo.DATA.Models.Livro", b =>
                {
                    b.Navigation("LivroClienteEmprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
